<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../application/models/Users.php';

/**
 * Test class for Application_Model_Users.
 * Generated by PHPUnit on 2010-02-23 at 10:54:12.
 */
class Application_Model_UsersTest extends Zend_Test_PHPUnit_DatabaseTestCase {

    private $_connectionMock;

    protected function getConnection()
    {
        if($this->_connectionMock == null) {
            $connection = Zend_Db::factory('PDO_SQLITE', array('dbname'=>APPLICATION_PATH.'/../data/db/manuscript-testing.db'));
            $this->_connectionMock = $this->createZendDbConnection($connection, 'zfunittests');
            Zend_Db_Table_Abstract::setDefaultAdapter($connection);
        }

        return $this->_connectionMock;
    }

    protected function getDataSet()
    {
        return $this->createFlatXmlDataSet(dirname(__FILE__).'/_files/usersSeed.xml');
    }

    /**
     * Tests adding a user into the system
     */
    public function testAdd() {
        $data   = array(
            'username'      => 'testuser',
            'password'      => 'happy',
            'name'          => 'Test User',
            'email'         => 'testuser@domain.com',
            'primaryGroup'  => 1,
        );

        $users  = new Application_Model_Users();
        $id = $users->add($data);
        $ds = new Zend_Test_PHPUnit_Db_DataSet_QueryDataSet($this->getConnection());
        $ds->addTable('user_accounts', 'SELECT * FROM user_accounts');

        $this->assertEquals(2, $id);
        $this->assertDataSetsEqual($this->createFlatXmlDataSet(dirname(__FILE__).'/_files/usersTestAdd.xml'), $ds);
    }

    /**
     * Tests changing the status of a user
     */
    public function testChangeStatus() {
        $users  = new Application_Model_Users();

        $user   = $users->find(1);
        $this->assertEquals(1, $user->active);

        $users->changeStatus(1);
        $user   = $users->find(1);
        $this->assertEquals(0, $user->active);
    }

    /**
     * Tests returning all the usrs in the DB
     */
    public function testFetchAll() {
        $users  = new Application_Model_Users();

        $this->assertEquals(1, count($users->fetchAll()));
    }

    /**
     * Tests returning a specific users
     */
    public function testFind() {
        $users  = new Application_Model_Users();
        $user   = $users->find(1);

        $this->assertEquals(count($user->toArray()), 7);
    }

    /**
     * Tests returning the backend table
     */
    public function testGetDbTable() {
        $users  = new Application_Model_Users();

        $this->assertType('Zend_Db_Table_Abstract', $users->getDbTable());
    }

    /**
     * Tests setting the backend table to a specific instance
     */
    public function testSetDbTable() {
        $users  = new Application_Model_Users();
        $users->setDbTable('Application_Model_DbTable_Users');

        $this->assertType('Application_Model_DbTable_Users', $users->getDbTable());
    }

    /**
     * Tests updating a user without updating their password
     */
    public function testUpdateWithoutPassword() {
        $data   = array(
            'username'      => 'testuser',
            'password'      => 'happy',
            'name'          => 'Test User',
            'email'         => 'testuser@domain.com',
            'primaryGroup'  => 1,
        );

        $users  = new Application_Model_Users();
        $id = $users->add($data);

        $newData   = array(
            'username'      => 'testuser',
            'name'          => 'Test User2',
            'email'         => 'testuser2@domain.com',
            'primaryGroup'  => 1,
        );

        $users->update($newData, $id);
        $ds = new Zend_Test_PHPUnit_Db_DataSet_QueryDataSet($this->getConnection());
        $ds->addTable('user_accounts', 'SELECT * FROM user_accounts');

        $this->assertDataSetsEqual($this->createFlatXmlDataSet(dirname(__FILE__).'/_files/usersTestUpdateWithoutPassword.xml'), $ds);
    }

    /**
     * Tests altering a user and their password
     */
    public function testUpdateWithPassword() {
        $data   = array(
            'username'      => 'testuser',
            'password'      => 'happy',
            'name'          => 'Test User',
            'email'         => 'testuser@domain.com',
            'primaryGroup'  => 1,
        );

        $users  = new Application_Model_Users();
        $id = $users->add($data);

        $newData   = array(
            'username'      => 'testuser',
            'password'      => 'nothappy',
            'name'          => 'Test User2',
            'email'         => 'testuser2@domain.com',
            'primaryGroup'  => 1,
        );

        $users->update($newData, $id);
        $ds = new Zend_Test_PHPUnit_Db_DataSet_QueryDataSet($this->getConnection());
        $ds->addTable('user_accounts', 'SELECT * FROM user_accounts');

        $this->assertDataSetsEqual($this->createFlatXmlDataSet(dirname(__FILE__).'/_files/usersTestUpdateWithPassword.xml'), $ds);
    }
}
?>
